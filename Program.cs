using System.Linq;
using Microsoft.ML;
using Microsoft.ML.Data;
using Microsoft.ML.Transforms.Onnx;
using System.Text.Json;

public class OnnxInput
{
[LoadColumn(0,28)]
[VectorType(29)] //VectorType(3)
public Int32 [] icat { get; set; }

[LoadColumn(0,23)]
[VectorType(24)]
public float [] inum { get; set; }

}

public class OnnxOutput 
{
    [ColumnName("cls")]
    public float[] cls { get; set; }
}

public class HardSoft
    {
        public Int32 [] Hard { get; set; }
        public float [] Soft { get; set; }
    }

class Program {

static string ONNX_MODEL_PATH = "model.onnx";

static ITransformer GetPredictionPipeline(MLContext mlContext){
 var inputColumns = new string []{
   "icat", "inum"
};

var outputColumns = new string [] { "cls" };

var onnxPredictionPipeline =
    mlContext
        .Transforms
        .ApplyOnnxModel(
            outputColumnNames: outputColumns,
            inputColumnNames: inputColumns,
            ONNX_MODEL_PATH);
            
var emptyDv = mlContext.Data.LoadFromEnumerable(new OnnxInput[] {});

return onnxPredictionPipeline.Fit(emptyDv);

}

static void Main(string[] args){
        //Console.WriteLine($"args: {args[0]}");
        //string jsonString = @"{""Hard"": [34, 35, 16, 4, 4, 5, 5, 6, 17, 9, 17, 9, 17, 9, 36, 18, 19, 20, 5, 12, 5, 4, 13, 17, 37, 38, 39, 4, 13],""Soft"": [1486400.0, 563712.0, 4544.0, 0.0, 8793797623808.0, 1064960.0, 1083854.0, 5.163, 2.115, 6.579, 174762.667, 2560.0, 486400.0, 174715.333, 2244.0, 485940.0, 430.0, 31.0, 3.913, 2.118, 7.977, 6812.493, 20.0, 104056.0]}";
        HardSoft? parsed = JsonSerializer.Deserialize<HardSoft>(args[0]);
        //HardSoft? parsed = JsonSerializer.Deserialize<HardSoft>(jsonString);
	MLContext mlContext = new MLContext();
	var onnxPredictionPipeline = GetPredictionPipeline(mlContext);
	var onnxPredictionEngine = mlContext.Model.CreatePredictionEngine<OnnxInput, OnnxOutput>(onnxPredictionPipeline);
        var testInput = new OnnxInput
		{
		    icat = parsed.Hard,
		    inum = parsed.Soft
		}; 
	var prediction = onnxPredictionEngine.Predict(testInput);
	Console.WriteLine($"Predicted Value: {prediction.cls.First()}");  
        }

}
